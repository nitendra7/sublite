{"version":3,"file":"AdminDashboard-T4DF7x9t.js","sources":["../../src/components/admin/AdminDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport apiFetch, { API_BASE } from \"../../utils/api\";\nimport SectionHeader from \"./SectionHeader\";\nimport { Card, CardHeader, CardTitle, CardContent } from \"../ui/card\";\n\nconst AdminDashboard = () => {\n  const [stats, setStats] = useState({\n    usersCount: 0,\n    bookingsCount: 0,\n    revenueTotal: 0,\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  // Placeholder for future enhancement:\n  const [recentUsers, setRecentUsers] = useState([]);\n  const [recentBookings, setRecentBookings] = useState([]);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      setLoading(true);\n      try {\n        const res = await apiFetch(`${API_BASE}/api/admin/stats`);\n        if (!res.ok) {\n          throw new Error(\"Failed to fetch dashboard stats\");\n        }\n        const data = await res.json();\n        setStats(data);\n      } catch (err) {\n        setError(err.message || \"Something went wrong\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStats();\n    // Future: fetchRecentUsers(), fetchRecentBookings()\n  }, []);\n\n  return (\n    <div className=\"p-6\">\n      <SectionHeader title=\"Admin Dashboard\" />\n      {loading ? (\n        <div>Loading dashboard...</div>\n      ) : error ? (\n        <div className=\"text-red-500\">{error}</div>\n      ) : (\n        <>\n          <div className=\"grid gap-6 grid-cols-1 md:grid-cols-3 lg:grid-cols-3 mb-8\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-gray-700 text-sm font-medium\">Total Users</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-semibold\">{stats.usersCount}</div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-gray-700 text-sm font-medium\">Total Bookings</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-semibold\">{stats.bookingsCount}</div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-gray-700 text-sm font-medium\">Total Revenue</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-semibold\">{`â‚¹${stats.revenueTotal}`}</div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Placeholders for future: Recent Users & Bookings */}\n          <div className=\"grid gap-6 grid-cols-1 md:grid-cols-2\">\n            <div>\n              <h3 className=\"font-semibold text-lg mb-2\">Recent Users</h3>\n              <PlaceholderList type=\"user\" />\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-lg mb-2\">Recent Bookings</h3>\n              <PlaceholderList type=\"booking\" />\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\n\n// Placeholder for future actual lists\nfunction PlaceholderList({ type }) {\n  return (\n    <div className=\"bg-gray-100 p-4 rounded text-gray-500 text-center\">\n      {`No recent ${type}s loaded yet.`}\n    </div>\n  );\n}\n\nexport default AdminDashboard;"],"names":["AdminDashboard","stats","setStats","useState","loading","setLoading","error","setError","recentUsers","setRecentUsers","recentBookings","setRecentBookings","useEffect","res","apiFetch","API_BASE","data","err","jsxs","jsx","SectionHeader","Fragment","Card","CardHeader","CardTitle","CardContent","PlaceholderList","type"],"mappings":"yIAKA,MAAMA,EAAiB,IAAM,CAC3B,KAAM,CAACC,EAAOC,CAAQ,EAAIC,WAAS,CACjC,WAAY,EACZ,cAAe,EACf,aAAc,CAAA,CACf,EACK,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAS,EAAE,EAE/B,CAACK,EAAaC,CAAc,EAAIN,EAAAA,SAAS,CAAA,CAAE,EAC3C,CAACO,EAAgBC,CAAiB,EAAIR,EAAAA,SAAS,CAAA,CAAE,EAEvDS,OAAAA,EAAAA,UAAU,IAAM,EACK,SAAY,CAC7BP,EAAW,EAAI,EACf,GAAI,CACF,MAAMQ,EAAM,MAAMC,EAAS,GAAGC,CAAQ,kBAAkB,EACxD,GAAI,CAACF,EAAI,GACP,MAAM,IAAI,MAAM,iCAAiC,EAEnD,MAAMG,EAAO,MAAMH,EAAI,KAAA,EACvBX,EAASc,CAAI,CACf,OAASC,EAAK,CACZV,EAASU,EAAI,SAAW,sBAAsB,CAChD,QAAA,CACEZ,EAAW,EAAK,CAClB,CACF,GAEA,CAEF,EAAG,CAAA,CAAE,EAGHa,EAAAA,KAAC,MAAA,CAAI,UAAU,MACb,SAAA,CAAAC,EAAAA,IAACC,EAAA,CAAc,MAAM,iBAAA,CAAkB,EACtChB,EACCe,EAAAA,IAAC,MAAA,CAAI,SAAA,uBAAoB,EACvBb,EACFa,MAAC,MAAA,CAAI,UAAU,eAAgB,SAAAb,CAAA,CAAM,EAErCY,OAAAG,EAAAA,SAAA,CACE,SAAA,CAAAH,EAAAA,KAAC,MAAA,CAAI,UAAU,4DACb,SAAA,CAAAA,OAACI,EAAA,CACC,SAAA,CAAAH,EAAAA,IAACI,GACC,SAAAJ,EAAAA,IAACK,EAAA,CAAU,UAAU,oCAAoC,uBAAW,CAAA,CACtE,EACAL,EAAAA,IAACM,GACC,SAAAN,EAAAA,IAAC,MAAA,CAAI,UAAU,yBAA0B,SAAAlB,EAAM,WAAW,CAAA,CAC5D,CAAA,EACF,SACCqB,EAAA,CACC,SAAA,CAAAH,EAAAA,IAACI,GACC,SAAAJ,EAAAA,IAACK,EAAA,CAAU,UAAU,oCAAoC,0BAAc,CAAA,CACzE,EACAL,EAAAA,IAACM,GACC,SAAAN,EAAAA,IAAC,MAAA,CAAI,UAAU,yBAA0B,SAAAlB,EAAM,cAAc,CAAA,CAC/D,CAAA,EACF,SACCqB,EAAA,CACC,SAAA,CAAAH,EAAAA,IAACI,GACC,SAAAJ,EAAAA,IAACK,EAAA,CAAU,UAAU,oCAAoC,yBAAa,CAAA,CACxE,EACAL,EAAAA,IAACM,EAAA,CACC,SAAAN,EAAAA,IAAC,MAAA,CAAI,UAAU,yBAA0B,SAAA,IAAIlB,EAAM,YAAY,EAAA,CAAG,CAAA,CACpE,CAAA,CAAA,CACF,CAAA,EACF,EAGAiB,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,eAAY,EACvDA,EAAAA,IAACO,EAAA,CAAgB,KAAK,MAAA,CAAO,CAAA,EAC/B,SACC,MAAA,CACC,SAAA,CAAAP,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,kBAAe,EAC1DA,EAAAA,IAACO,EAAA,CAAgB,KAAK,SAAA,CAAU,CAAA,CAAA,CAClC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAEJ,CAEJ,EAIA,SAASA,EAAgB,CAAE,KAAAC,GAAQ,CACjC,aACG,MAAA,CAAI,UAAU,oDACZ,SAAA,aAAaA,CAAI,gBACpB,CAEJ"}